version: "2"
image_name: trustyai_ragas_distro
apis:
  - eval
  - inference
  - telemetry
  - datasetio
providers:
  eval:
    - provider_id: trustyai_ragas_inline
      provider_type: inline::trustyai_ragas
      config:
        metrics: ["answer_relevancy"]
    - provider_id: trustyai_ragas_remote
      provider_type: remote::trustyai_ragas
      config:
        metrics: ["answer_relevancy"]
        kubeflow_config:
          pipelines_endpoint: ${env.KUBEFLOW_PIPELINES_ENDPOINT}
          namespace: ${env.KUBEFLOW_NAMESPACE}
          llama_stack_url: ${env.LLAMA_STACK_URL}
          base_image: ${env.KUBEFLOW_BASE_IMAGE}
  datasetio:
    # TODO: add this
    # - provider_id: huggingface
    #   provider_type: remote::huggingface
    #   config:
    #     kvstore:
    #       type: sqlite
    #       namespace: null
    #       db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/together}/huggingface_datasetio.db
    - provider_id: localfs
      provider_type: inline::localfs
      config:
        kvstore:
          type: sqlite
          namespace: null
          db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/trustyai_ragas_distro}/localfs_datasetio.db
  inference:
    - provider_id: ollama
      provider_type: remote::ollama
      config:
        url: ${env.OLLAMA_URL:http://localhost:11434}
  telemetry:
    - provider_id: meta-reference
      provider_type: inline::meta-reference
      config:
        service_name: ${env.OTEL_SERVICE_NAME:}
      sinks: ${env.TELEMETRY_SINKS:console,sqlite}
      sqlite_db_path: ${env.SQLITE_STORE_DIR:~/.llama/distributions/trustyai_ragas_distro}/trace_store.db
models:
  - metadata:
      embedding_dimension: 384
    model_id: all-MiniLM-L6-v2
    provider_id: ollama
    provider_model_id: all-minilm:latest
    model_type: embedding
  - metadata: {}
    model_id: granite3.3:2b
    provider_id: ollama
    provider_model_id: granite3.3:2b
    model_type: llm
server:
  host: localhost
  port: 8321
external_providers_dir: ./providers.d
