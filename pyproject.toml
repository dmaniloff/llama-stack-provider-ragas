[project]
name = "llama-stack-provider-ragas"
version = "0.1.0"
description = "Ragas evaluation as an out-of-tree Llama Stack provider"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "llama-stack",
    "ragas",
]

[project.optional-dependencies]
distro = ["opentelemetry-api", "opentelemetry-exporter-otlp", "aiosqlite", "ollama", "uvicorn"]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pre-commit",
    "ruff",
    "mypy",
    "ipykernel",
    "rich"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
pythonpath = ["src"]
addopts = "-v"
log_cli = true
log_cli_level = "INFO"
markers = [
    "integration_test: Integration tests that require a running Llama Stack server",
]

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
ignore_missing_imports = true
exclude = [
    "build",
    "dist",
    ".venv",
    ".mypy_cache",
]
